# -*- coding: utf-8 -*-
"""q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c8E3nkqIcIg2o6dITxu8DdzUxuL14W2f
"""

"""
UMass ECE 241 - Advanced Programming
Homework #2     Fall 2021
question4.py - position of partial sorted list

"""

"""
A shelf contains some products sorted according to their width,
e.g.     |||10, 20|||

we place more already sorted products with lesser width than
the one that are already present.
e.g.     |||10,20||1,2,4,7|||

Find the position of a given product (no sorting allowed and find it in O(log n))

e.g.     |||10, 20||1, 2, 4, 7|||
         position of product with width 10 is 0
         position of product with width 7 is 5
"""


class Shelf:

    def search_product(self, arr, low, high, x):
        # TODO Fill this function to find the position of the product in shelf_contents
        # TODO return the position of the product
        # TODO 'return -1' if the product is not in the shelf
        # Check base case
        if high >= low:
    
            mid = (high + low) // 2
    
            # If element is one of the middle elements
            if (arr[mid] == x): 
              return mid
            if (mid > low and arr[mid - 1] == x):
              return (mid - 1)
            if (mid < high and arr[mid + 1] == x):
              return (mid + 1)
    
            # If element is smaller than mid, then it can only
            # be present in left subarray
            elif arr[mid] > x:
                return self.search_product(arr, low, mid - 1, x)
    
            # Else the element can only be present in right subarray
            else:
                return self.search_product(arr, mid + 1, high, x)
        
        else:
            # Element is not present in the array
            return -1


    def locate_product(self, pos, shelf_contents):
        '''
        (Don't Modify this function) Notifies the position of the product under consideration
        '''
        if pos < -1:
            print("\nFill in the search function and remove 'return -2'")
            return

        if pos is not -1:
            print("\n########### Found product on the Shelf ###########")

            print("Found product with width:{} at position:{} ".format(shelf_contents[pos],pos))

            print("\n##################################################")
        else:
            print("\nNo such product!!")


def main():
    shelf_contents = [10, 20, 1, 2, 3, 6, 7]
    shelf_obj = Shelf()
    product_to_be_found = 1
    pos = shelf_obj.search_product(shelf_contents, 0, len(shelf_contents) - 1, product_to_be_found)
    print("pos:{}".format(pos))
    shelf_obj.locate_product(pos, shelf_contents)


if __name__ == '__main__':
    main()